---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../config';
import { getBooks, getPosts } from '../services';
import RichBody from '../components/RichBody.astro';
const { page, book } = Astro.props;
// console.log('--s',page,book)
// if(!Number.isInteger(page) || page < 1) {
//   return new Response(null, {
//     status: 404,
//     statusText: 'Not found'
//   });
// }
const books = (await getBooks()).data?.books?.filter(item => item.status === 'public')
const posts = (await getPosts(page - 1,book)).data?.posts ?? [];
// if(posts.length === 0) {
//   return new Response(null, {
//     status: 404,
//     statusText: 'Not found'
//   });
// }
// console.log('--page layout',page,books,posts)
// console.log('---',Astro.url.pathname);
const prefix = book ? `/p/${book}`:'/articles'
const preUrl = page <= 1 ? '': `${prefix}/page/${page - 1}`
const nextUrl = posts.length > 0 ? `${prefix}/page/${page + 1}`:''
const isPreview = false;
---
<!DOCTYPE html>
<html lang="en-us">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			ul {
				list-style-type: none;
				padding: unset;
			}
			ul li {
				display: flex;
			}
			ul li time {
				flex: 0 0 130px;
				font-style: italic;
				color: #888;
			}
			ul li a:visited {
				color: #8e32dc;
			}
      .book-nav {
        margin-top: -10px;
        margin-bottom: 20px;
      }
      .book-nav li {
        display: inline-block;
        margin-right: 10px;
      }
      .book-nav li a {
        text-decoration: none;
        font-size: 14px;
        border: 1px solid transparent;
        border-radius: 12px;
        padding: 6px 10px;
      }
      .book-nav li a.active {
        border-color:  rgb(209, 207, 207);
      }
      .book-nav li a:visited {
        color: unset;
      }

      .footer-link {
        margin: 10px 0;
      }
      .footer-link a:last-child {
        margin-left: 15px;
      }
      .footer-link a.mute {
        color: #888;
        cursor:not-allowed;
      }
		</style>
	</head>
    <RichBody>
      <Header />
      <section class="book-nav">
        <ul>
          {books.map((book) => {
            const _path = `/p/${book.slug}`
            return <li><a href={_path} class={Astro.url.pathname.startsWith(_path)?'active':''}>{book.name}</a></li>
          })}
        </ul>
      </section>
      <main>
        <section>
          {
            posts.length > 0 ? (
              <ul>
                {posts.map((post) => (
                  <li>
                    <time datetime={post.created_at}>
                      {new Date(post.created_at).toLocaleDateString('en-us', {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric',
                      })}
                    </time>
                    <a href={`/p/${post.book?.slug || post.book?.uuid}/${post.slug || post.uuid}${isPreview ? `?preview=1` : ''}`}>
                      {post.name}
                    </a>
                  </li>
                ))}
              </ul>
            ):<p>No Data Yet!</p>
          }
        </section>
        <div class="footer-link">
          <a href={preUrl || `javascript:void`} class={preUrl?'':'mute'}>←&nbsp;Previous</a>
          <a href={nextUrl || `javascript:void`} class={nextUrl?'':'mute'}>Next&nbsp;→</a>
        </div>
        <Footer />
      </main>
    </RichBody>
</html>
